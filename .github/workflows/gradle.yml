#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'adopt'
#
#      - name: Build with Gradle
#        run: ./gradlew clean build -x test
#
#      - name: Set up Docker
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/goldx:latest .
#          docker push ${{ secrets.DOCKER_USERNAME }}/goldx:latest
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Start SSH Agent
#        run: eval "$(ssh-agent -s)"
#        shell: bash
#
#      - name: Add SSH Key
#        run: |
#          echo "${{ secrets.EC2_SSH_KEY }}" > id_rsa
#          chmod 600 id_rsa
#          ssh-add id_rsa
#        shell: bash
#
#      - name: Deploy to EC2
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            docker pull ${{ secrets.DOCKER_USERNAME }}/goldx:latest
#            docker stop goldx || true
#            docker rm goldx || true
#            docker run -d --name goldx -p 80:80 ${{ secrets.DOCKER_USERNAME }}/goldx:latest